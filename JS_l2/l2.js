////Задание 1 Дан массив. Найдите среднее арифметическое его элементов.
//alert("Дан массив. Найдите среднее арифметическое его элементов.");
//let masTask1 = [12,34,4,76,769];
//let averageResult = 0;
//function average(){
//    for(let i = 0; i < masTask1.length; i++){
//        averageResult += masTask1[i];
//    }
//}
//average();
//alert(averageResult);
//
////Задание 2 Дана переменная str, в которой хранится какой-либо текст. Реализуйте обрезание данного текста по следующему принципу: если количество символов этого текста больше заданного в переменной n, то в переменную result запишем первые n символов строки str и добавим в конец троеточие '...'. В противном случае в переменную result запишем содержимое переменной str.
//alert("Дана переменная str, в которой хранится какой-либо текст. Реализуйте обрезание данного текста по следующему принципу: если количество символов этого текста больше заданного в переменной n, то в переменную result запишем первые n символов строки str и добавим в конец троеточие '...'. В противном случае в переменную result запишем содержимое переменной str.");
//let str = "1234567890";
//let n = 5;
//let result = '';
//function cutString(){
//    if(n >= str.length) result = str;
//    else{
//        result = str.slice(0, n) + '...';
//    }
//}
//cutString();
//alert(result);
//
////Задание 3 Дан массив с элементам. С помощью цикла for и оператора if проверьте, есть ли в массиве элемент со значением, равным 4. Если есть - выведите на экран 'Есть!' и выйдите из цикла. Если нет - ничего делать не надо.
//alert("Дан массив с элементам. С помощью цикла for и оператора if проверьте, есть ли в массиве элемент со значением, равным 4. Если есть - выведите на экран 'Есть!' и выйдите из цикла. Если нет - ничего делать не надо.");
//let masTask3 = [1,3,'4','f',7];
//function checkFour(){
//    for(let i = 0; i < masTask3.length; i++){
//        if(4 == masTask3[i]){
//            return 'Yes';
//        }
//    }
//    return 'No';
//}
//alert(checkFour());
//
////Задание 4 Сделайте функцию isEven() (even - это четный), которая параметром принимает целое число и проверяет: четное оно или нет. Если четное - пусть функция возвращает true, если нечетное - false.
//alert("Сделайте функцию isEven() (even - это четный), которая параметром принимает целое число и проверяет: четное оно или нет. Если четное - пусть функция возвращает true, если нечетное - false.");


////Задание 7 От пользователя требуется ввести ФИО. Необходимо проверить ввод пользователя на наличие недопустимых символов. Недопустимыми символами считать любые символы, кроме букв, пробелов и точек. Эти символы можно задать в javascript в виде строки.
//alert("От пользователя требуется ввести ФИО. Необходимо проверить ввод пользователя на наличие недопустимых символов. Недопустимыми символами считать любые символы, кроме букв, пробелов и точек. Эти символы можно задать в javascript в виде строки.");
//let userName = prompt("Введите ваше ФИО");
//let newStr = userName.replace(/[a-zA-Zа-яА-Я\.\ ]+/g,'');
//if(newStr.length == 0) alert("Ok");
//else alert("Not ok");
//
////Задание 8 . Реализовать простейший вариант теста, поочередно выдавая пользователю вопросы, требующие односложных ответов ("Да" и "Нет"). После прохождения теста вывести результат. Вопросы и оценки за каждый вопрос хранить в виде массивов.
//alert("Реализовать простейший вариант теста, поочередно выдавая пользователю вопросы, требующие односложных ответов \"Да\" и \"Нет\". После прохождения теста вывести результат. Вопросы и оценки за каждый вопрос хранить в виде массивов.");
//let questions = {"Волк травоядное животное?" : "Нет",
//                "Земля круглая?" : 'Да',
//                "В массиве в JavaScript должны хранится элементы обязательно одного типа?" : 'Нет',
//                "2 + 2 =4?" : 'Да'};
//let answers = [];
//let result = 0;
//function test(){
//    for(key in questions){
//        //Сравниваем ответ со значением нашего ключа-вопроса
//        if(questions[key].toLowerCase() == prompt(key).toLowerCase()) { 
//          result++;
//        }
//        //Помещаем ответы в массив
//         answers.push(questions[key]);
//    }
//}
//test();
//alert(result);

//Задание 9 
alert("Реализуйте класс Student (Студент), который будет наследоваться от класса User. Этот класс должен иметь следующие свойства: name (имя, наследуется от User), surname (фамилия, наследуется от User), year (год поступления в вуз). Класс должен иметь метод getFullName() (наследуется от User), с помощью которого можно вывести одновременно имя и фамилию студента. Также класс должен иметь метод getCourse(), который будет выводить текущий курс студента (от 1 до 5). Курс вычисляется так: нужно от текущего года отнять год поступления в вуз. Проверьте работу с помощью создания объектов и вызова их методов.");

class User{
    constructor(name,surname){
        this._name = name;
        this._surname = surname;
    }
    
    set name(newName){
        this._name = newName;
    }
    set surname(newSurname){
        this._surname = newSurname;
    }
    
    get name(){
        return this._name;
    }
    get surname(){
        return this._surname;
    }
    
    getFullName(){
        return this._name + " " + this._surname;
    }
    
}

class Student extends User{
    constructor(name,surname,year){
        super(name,surname);
        this._year = year;
    }
    
     set year(newYear){
        this._year = newYear;
    }
    
    get year(){
        return this._year;
    }
    
    getCourse(){
        let currentYear = new Date().getFullYear();
        return currentYear - this._year;
    }
}

let student1 = new Student('Igor','Vigor',2020);
alert(student1.getFullName());
alert(student1.getCourse() + " курс");


